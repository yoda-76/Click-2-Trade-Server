generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String          @id @default(cuid())
  name         String
  email        String          @unique
  password     String
  total_pnl    Int             @default(0)
  access_token String?
  ph_number    Int?
  photo        String?
  verified     Boolean         @default(false)
  account      MasterAccount[]
  transaction  Transaction[]
  session      Session[]
}

model Session {
  id             String    @id @default(cuid())
  user_id        String    @unique
  is_expired     Boolean   @default(false)
  started_at     DateTime  @default(now())
  ended_at       DateTime?
  last_active_at DateTime @default(now())
  access_token String
  refresh_token  String
  user           User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model MasterAccount {
  id                      String         @id @default(cuid())
  user_id                 String
  u_id                    String         @unique
  broker                  Broker
  broker_id               String         @unique
  name_tag                String
  key                     String
  secret                  String
  access_token            String?
  last_token_generated_at DateTime?
  added_at                DateTime       @default(now())
  pnl                     Int            @default(0)
  user                    User           @relation(fields: [user_id], references: [id], onDelete: Cascade)
  child_account           ChildAccount[]
  prefrences              Prefrences[]
}

model ChildAccount {
  id                      String        @id @default(cuid())
  u_id                    String        @unique
  master_id               String
  broker                  Broker
  broker_id               String        @unique
  name_tag                String
  key                     String
  secret                  String
  access_token            String?
  last_token_generated_at DateTime?
  multiplier              Int           @default(1)
  active                  Boolean       @default(true)
  added_at                DateTime      @default(now())
  pnl                     Int           @default(0)
  mtm_target              Int           @default(100)
  mtm_target_toggle       Boolean       @default(false)
  mtm_loss                Int           @default(40)
  mtm_loss_toggle         Boolean       @default(false)
  master                  MasterAccount @relation(fields: [master_id], references: [id], onDelete: Cascade)
}

model Prefrences {
  id                   String         @id @default(cuid())
  account_id           String?        @unique
  stoploss             Int            @default(100)
  target               Int            @default(1000)
  sl_increment         Int            @default(1)
  target_increment     Int            @default(1)
  trailing_point       Int            @default(1)
  mtm_stoploss         Int            @default(100)
  mtm_target           Int            @default(1000)
  mtm_sl_increment     Int            @default(1)
  mtm_target_increment Int            @default(1)
  mtm_trailing_point   Int            @default(1)
  master_account       MasterAccount? @relation(fields: [account_id], references: [id], onDelete: Cascade)
}

model Transaction {
  id      String   @id @default(cuid())
  user_id String
  ref_id  String   @unique
  amount  Int
  date    DateTime @default(now())
  status  String
  user    User     @relation(fields: [user_id], references: [id], onDelete: NoAction)
}

enum Broker {
  UPSTOCKS
  DHAN
  ANGEL
  ESPRESSO
}

enum TransactionType {
  BUY
  SELL
}

enum OrderStatus {
  COMPLETED
  REJECTED
  CANCELLED
  PENDING
}

enum AccountType {
  UNASSIGNED
  MASTER
  CHILD
  ADMIN
}
